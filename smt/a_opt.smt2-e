(set-logic ALL)
(set-info :status sat)
(declare-fun A0 () Int)
(declare-fun B0 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun E0 () Int)
(declare-fun F0 () Int)
(declare-fun G0 () Int)
(declare-fun H0 () Int)
(declare-fun I0 () Int)
(declare-fun J0 () Int)
(declare-fun K0 () Int)
(declare-fun L0 () Int)
(declare-fun M0 () Int)
(declare-fun N0 () Int)
(declare-fun O0 () Int)
(declare-fun P0 () Int)
(declare-fun Q0 () Int)
(declare-fun R0 () Int)
(declare-fun S0 () Int)
(declare-fun T0 () Int)
(declare-fun U0 () Int)
(declare-fun V0 () Int)
(declare-fun W0 () Int)
(declare-fun X0 () Int)
(declare-fun Y0 () Int)
(declare-fun Z0 () Int)
(declare-fun A1 () Int)
(declare-fun B1 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun E1 () Int)
(declare-fun F1 () Int)
(declare-fun G1 () Int)
(declare-fun H1 () Int)
(declare-fun J1 () Int)
(assert (and (<= (- 1) A0) (<= A0 1) (<= (- 1) B0) (<= B0 1) (<= (- 1) C0) (<= C0 1) (<= (- 1) D0) (<= D0 1) (<= (- 1) E0) (<= E0 1) (<= (- 1) F0) (<= F0 1) (<= (- 1) G0) (<= G0 1) (<= (- 1) H0) (<= H0 1)))
(assert (or (and (<= (+ 1 (* (- 1) K0) L0) 0) (<= (+ 1 (* (- 1) L0)) 0) (<= (+ 2 (* (- 1) M0)) 0) (not (<= (+ (- 1) K0) 0)) (<= (+ 2 (* (- 1) N0)) 0) (<= (+ 2 (* (- 1) O0)) 0) (= (+ (* (- 1) P0) L0) 0) (<= (+ I0 (* (+ 0 A0) Q0) (* (+ 0 B0) K0) (* (+ 0 C0) N0) (* (+ 0 D0) L0)) 0) (<= (+ J0 (* (+ 0 E0) Q0) (* (+ 0 F0) K0) (* (+ 0 G0) N0) (* (+ 0 H0) L0)) 0)) (and (<= (+ 1 K0 (* (- 1) L0)) 0) (<= (+ 1 (* (- 1) L0)) 0) (<= (+ 2 (* (- 1) M0)) 0) (not (<= (+ (- 1) K0) 0)) (<= (+ 2 (* (- 1) N0)) 0) (<= (+ 2 (* (- 1) O0)) 0) (= (+ (* (- 1) P0) L0) 0) (<= (+ I0 (* (+ 0 A0) Q0) (* (+ 0 B0) K0) (* (+ 0 C0) N0) (* (+ 0 D0) L0)) 0) (<= (+ J0 (* (+ 0 E0) Q0) (* (+ 0 F0) K0) (* (+ 0 G0) N0) (* (+ 0 H0) L0)) 0))))
(assert (or (or (and (>= R0 0) (>= S0 0) (>= T0 0) (>= U0 0) (>= V0 0) (>= W0 0) (>= X0 0) (>= Y0 0) (>= Z0 0) (> (+ (* 1 R0) (* 1 S0) (* 1 T0) (* 1 U0) (* 1 V0) (* 2 W0) (* 2 X0) (* I0 Y0) (* J0 Z0) (- 1)) 0) (= (+ (* (- 1) R0) (* A0 Y0) (* E0 Z0)) 0) (= (+ (* (- 1) S0) (* (- 1) T0) (* B0 Y0) (* F0 Z0)) 0) (= (+ (* (- 1) W0) (* C0 Y0) (* G0 Z0)) 0) (= (+ (* (- 1) U0) (* D0 Y0) (* H0 Z0)) 0) (= (* (- 1) X0) 0) (= (+ (* 1 T0) (* 1 V0)) 0)) (and (>= A1 0) (>= B1 0) (>= C1 0) (>= D1 0) (>= E1 0) (>= F1 0) (>= G1 0) (>= H1 0) (>= J1 0) (> (+ (* 1 A1) (* 1 B1) (* 1 C1) (* 1 D1) (* 1 E1) (* 2 F1) (* 2 G1) (* I0 H1) (* J0 J1) 2) 0) (= (+ (* (- 1) A1) (* A0 H1) (* E0 J1)) 0) (= (+ (* (- 1) B1) (* (- 1) C1) (* B0 H1) (* F0 J1) (- 1)) 0) (= (+ (* (- 1) F1) (* C0 H1) (* G0 J1)) 0) (= (+ (* (- 1) D1) (* D0 H1) (* H0 J1)) 0) (= (* (- 1) G1) 0) (= (+ (* 1 C1) (* 1 E1)) 0))) (and (or (and (<= (+ 1 (* (- 1) K0) L0) 0) (<= (+ 1 (* (- 1) L0)) 0) (<= (+ 2 (* (- 1) M0)) 0) (not (<= (+ (- 1) K0) 0)) (<= (+ 2 (* (- 1) N0)) 0) (<= (+ 2 (* (- 1) O0)) 0) (= (+ (* (- 1) P0) L0) 0) (<= (+ I0 (* (+ 0 A0) Q0) (* (+ 0 B0) K0) (* (+ 0 C0) N0) (* (+ 0 D0) L0)) 0) (<= (+ J0 (* (+ 0 E0) Q0) (* (+ 0 F0) K0) (* (+ 0 G0) N0) (* (+ 0 H0) L0)) 0)) (and (<= (+ 1 K0 (* (- 1) L0)) 0) (<= (+ 1 (* (- 1) L0)) 0) (<= (+ 2 (* (- 1) M0)) 0) (not (<= (+ (- 1) K0) 0)) (<= (+ 2 (* (- 1) N0)) 0) (<= (+ 2 (* (- 1) O0)) 0) (= (+ (* (- 1) P0) L0) 0) (<= (+ I0 (* (+ 0 A0) Q0) (* (+ 0 B0) K0) (* (+ 0 C0) N0) (* (+ 0 D0) L0)) 0) (<= (+ J0 (* (+ 0 E0) Q0) (* (+ 0 F0) K0) (* (+ 0 G0) N0) (* (+ 0 H0) L0)) 0))) false)))
(check-sat)
(exit)
